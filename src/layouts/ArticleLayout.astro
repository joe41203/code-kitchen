---
import BaseHead from "@components/BaseHead.astro";
import Footer from "@components/Footer.astro";
import FormattedDate from "@components/FormattedDate.astro";
import GTM from "@components/GTM.astro";
import Header from "@components/Header.astro";
import NoFlash from "@components/NoFlash.astro";
import Prose from "@components/Prose.astro";
import Sidebar from "@components/Sidebar.astro";
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";

type Props = CollectionEntry<"articles">["data"];

const { title, description, cover, tags } = Astro.props;

// キャッシュ設定の定義
const cacheControl = {
  _astro: "public, max-age=31536000, immutable",
};

const currentPage = Astro.url.pathname;

// キャッシュヘッダーの設定
if (currentPage.startsWith("/_astro/")) {
  Astro.response.headers.set("Cache-Control", cacheControl._astro);
}

const allArticles = await getCollection("articles");

const latestArticlesWithCommonTags = allArticles
  .filter((article) => {
    if (!article.data.tags || !tags) return false;
    return article.data.tags.some((tag: string) => tags.includes(tag));
  })
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
  .slice(0, 2);
---

<html lang="ja">
  <head>
    <BaseHead title={title} description={description} cover={cover.src} />
  </head>

  <body class="dark:bg-black dark:text-white">
    <NoFlash/>
    <GTM />
    <Header />
    <main
      class="flex flex-col p-5 lg:flex-row lg:justify-between lg:px-52 lg:py-20"
    >
      <article>
        <Prose>
          <h1>{title}</h1>
          <slot />
        </Prose>
        <div class="flex flex-col gap-5 py-5 md:flex-row md:justify-between">
          {
            latestArticlesWithCommonTags.map((article) => (
              <div class="max-w-sm overflow-hidden rounded shadow-lg">
                <a href={`/articles/${article.slug}/`}>
                  <div>
                    <Image
                      src={article.data.cover}
                      alt={article.data.description}
                    />
                    <div class="px-6 py-4">
                      <h4 class="mb-2 text-xl font-bold">
                        {article.data.title}
                      </h4>
                      <p class="date">
                        <FormattedDate date={article.data.pubDate} />
                      </p>
                    </div>
                    {article.data.tags ? (
                      <div class="px-6 pb-2 pt-4">
                        {article.data.tags?.map((tag) => (
                          <a href={`/tags/${tag}`}>
                            <span class="mb-2 mr-2 inline-block rounded-full bg-gray-200 px-3 py-1 text-sm font-semibold text-gray-700">
                              {tag}
                            </span>
                          </a>
                        ))}
                      </div>
                    ) : null}
                    <div class="px-6 pb-2 pt-4" />
                  </div>
                </a>
              </div>
            ))
          }
        </div>
      </article>
      <Sidebar />
    </main>
    <Footer />
  </body>
</html>
